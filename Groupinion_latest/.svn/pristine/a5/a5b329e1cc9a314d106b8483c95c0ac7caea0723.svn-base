//
//  WebImageSearchViewController.m
//  Groupinion
//
//  Created by Sumit Ghosh on 29/10/13.
//  Copyright (c) 2013 Sumit Ghosh. All rights reserved.
//

#import "WebImageSearchViewController.h"
#import "JSON.h"
#import "UIImageView+WebCache.h"
@interface WebImageSearchViewController ()

@end

@implementation WebImageSearchViewController

- (id)initWithNibName:(NSString *)nibNameOrNil bundle:(NSBundle *)nibBundleOrNil
{
    self = [super initWithNibName:nibNameOrNil bundle:nibBundleOrNil];
    if (self) {
        // Custom initialization
    }
    return self;
}
-(void)backButtonClicked{
    
    [self dismissViewControllerAnimated:YES completion:nil];
}

- (void)viewDidLoad
{
    [super viewDidLoad];
    // Do any additional setup after loading the view from its nib.
    
    CAGradientLayer *gradientLayer = [CAGradientLayer layer];
    gradientLayer.frame = CGRectMake(0, 50, 320, 40);
    
    gradientLayer.colors = [NSArray arrayWithObjects:(id)[[UIColor colorWithRed:(CGFloat)182/255 green:(CGFloat)196/255 blue:(CGFloat)215/255 alpha:1.0] CGColor],(id)[[UIColor colorWithRed:(CGFloat)89/255 green:(CGFloat)116/255 blue:(CGFloat)152/255 alpha:1.0] CGColor], nil];
    [self.view.layer insertSublayer:gradientLayer atIndex:0];
    UIImageView *bannerImage=[[UIImageView alloc]initWithFrame:CGRectMake(0, 0, 320, 50)];
    bannerImage.image=[UIImage imageNamed:@"selectimage_hedder_btn.png"];
    [self.view addSubview:bannerImage];
    //Add Setting Button To View
    UIButton *backBtn=[UIButton buttonWithType:UIButtonTypeCustom];
    backBtn.frame= CGRectMake(10, 8, 60, 35);
    
    backBtn.enabled=YES;
    [backBtn setBackgroundImage:[UIImage imageNamed:@"Back_btn.png"] forState:UIControlStateNormal];
    [backBtn addTarget:self action:@selector(backButtonClicked) forControlEvents:UIControlEventTouchUpInside];
    [self.view addSubview:backBtn];
    
    self.searchBoxTextfield = [[UITextField alloc] initWithFrame:CGRectMake(10, 55, 250, 30)];
    self.searchBoxTextfield.delegate = self;
    self.searchBoxTextfield.placeholder = @"Enter Keyword";
    self.searchBoxTextfield.borderStyle = UITextBorderStyleRoundedRect;
    self.searchBoxTextfield.returnKeyType = UIReturnKeySearch ;
    [self.view addSubview:self.searchBoxTextfield];
    
//    self.moreButon = [UIButton buttonWithType:UIButtonTypeRoundedRect];
//    self.moreButon.frame = CGRectMake(265, 55, 50, 30);
//    self.moreButon.layer.borderColor=[UIColor lightGrayColor].CGColor;
//    self.moreButon.layer.borderWidth=1.0;
//    self.moreButon.layer.cornerRadius = 5.0f;
//    self.moreButon.clipsToBounds=YES;
//    self.moreButon.enabled=YES;
//    [self.moreButon setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
//    [self.moreButon setTitle:@"More Images" forState:UIControlStateNormal];
//    [self.moreButon addTarget:self action:@selector(moreImages) forControlEvents:UIControlEventTouchUpInside];
//    [self.scrollView addSubview:self.moreButon];
    
    [self.searchBoxTextfield becomeFirstResponder];
   
    
    self.scrollView = [[UIScrollView alloc]initWithFrame:CGRectMake(0, 90, 320, 435)];
    [self.view addSubview:self.scrollView];
    self.scrollView.backgroundColor = [UIColor whiteColor];
    [self.scrollView setContentSize:CGSizeMake(320, 1200)];
    
    self.moreButon = [UIButton buttonWithType:UIButtonTypeCustom];
    [self.moreButon setTitle:@"More Images" forState:UIControlStateNormal];
    [self.moreButon setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    [self.moreButon addTarget:self action:@selector(moreImages) forControlEvents:UIControlEventTouchUpInside];
    [self.scrollView addSubview:self.moreButon];
    totalImages = 0;
    x=10;
    y=10;
    pages=0;
}

- (void)didReceiveMemoryWarning
{
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}
-(IBAction)searchButtonClicked:(id)sender{
    [self.searchBoxTextfield resignFirstResponder];
    if([lastSearchKey isEqualToString:self.searchBoxTextfield.text] || [self.searchBoxTextfield.text isEqualToString:@""]){
        return;
    }
    if (self.imageListArray) {
        [self.imageListArray removeAllObjects];
    }
    else{
         self.imageListArray = [[NSMutableArray alloc] init];
    }
    lastSearchKey = self.searchBoxTextfield.text;
    self.searchButton.enabled=NO;
    
    NSString *searchKey = self.searchBoxTextfield.text;
    userDefaults = [NSUserDefaults standardUserDefaults];
    
    NSString *lastStoreSearchKey = [userDefaults objectForKey:@"GroupinionLastSearchKeyWord"];
    
    if ([searchKey isEqualToString:lastStoreSearchKey]) {
        self.imageListArray = [userDefaults objectForKey:@"GroupinionLastSearchImageList"];
        for (int i =0; i<self.imageListArray.count; i++) {
            [self displayImages];
            
        }
        self.moreButon.frame = CGRectMake(10, y+110, 120, 30);
    }
    else{
        
        [self getGoogleImagesForQuery:searchKey withPage:0];
    }
    
    
    
}

//API to fetch images from Google
- (void)getGoogleImagesForQuery:(NSString*)query withPage:(int)page
{
    @try {
        //https://ajax.googleapis.com/ajax/services/search/images?v=1.0&rsz=6&q=nature&start=0&&imgsz=medium
        //https://ajax.googleapis.com/ajax/services/search/images?v=1.0&q=fuzzy%20monkey
        //https://ajax.googleapis.com/ajax/services/search/images?v=1.0&q=fuzzy%20monkey&callback=processResults
        NSString *urlString = [NSString stringWithFormat:@"https://ajax.googleapis.com/ajax/services/search/images?v=1.0&rsz=8&q=%@&start=%d&&imgsz=xxlarge",query,page];
        urlString = [urlString stringByAddingPercentEscapesUsingEncoding:NSUTF8StringEncoding];
        //        NSString *urlString = [NSString stringWithFormat:@"https://ajax.googleapis.com/ajax/services/search/images?v=1.0&q=monkey"];
        
        
        NSHTTPURLResponse   * response;
        NSError *error;
        NSLog(@"url==%@",urlString);
        NSURL *url = [NSURL URLWithString:urlString];
        NSMutableURLRequest *request= [[NSMutableURLRequest alloc]initWithURL:url cachePolicy:NSURLRequestUseProtocolCachePolicy timeoutInterval:100.0];
        
        NSData *responseData=[NSURLConnection sendSynchronousRequest:request returningResponse:&response error:&error];
        NSString *respo=nil;
        if(error){
            respo=@"error";
            NSLog(@"url==%@\n error=%@",urlString,error);
        }
        else{
            respo=[[NSString alloc]initWithData:responseData encoding:NSUTF8StringEncoding];
            NSLog(@"respo==%@",respo);
            
            NSDictionary *dict = [respo JSONValue];
            NSDictionary *dict2 = [dict objectForKey:@"responseData"];
            if (dict2 == (NSDictionary*)[NSNull null]) {
                return;
            }
            NSArray *respoAry = [dict2 objectForKey:@"results"];
            NSLog(@"\n\nResponse Array = %@",respoAry);
            NSLog(@"Count = %lu",(unsigned long)respoAry.count);
            for (int i=0; i<respoAry.count; i++) {
                [self.imageListArray addObject:[respoAry objectAtIndex:i]];
                [self displayImages];
            }
            
            self.moreButon.frame = CGRectMake(10, y+110, 120, 30);
            [userDefaults setObject:self.imageListArray forKey:@"GroupinionLastSearchImageList"];
            [userDefaults setObject:self.searchBoxTextfield.text forKey:@"GroupinionLastSearchKeyWord"];
        }
        
        
    }
    @catch (NSException *exception) {
        NSLog(@"exception = %@",exception);
    }
    @finally {
        NSLog(@"Finally Blog Executed");
    }
}
-(void)displayImages{
    
    UIImageView *imgView = [[UIImageView alloc] initWithFrame:CGRectMake(x, y, 99, 100)];
    imgView.userInteractionEnabled=YES;
    NSDictionary *imageDictionary = [self.imageListArray objectAtIndex:totalImages];
    [imgView setImageWithURL:[NSURL URLWithString:[NSString stringWithFormat:@"%@",[imageDictionary objectForKey:@"unescapedUrl"]]]];
    [self.scrollView addSubview:imgView];
//    UITapGestureRecognizer *tap = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(tabGesture:)];
//    tap.numberOfTapsRequired=1;
//    [imgView addGestureRecognizer:tap];
    totalImages = totalImages+1;
    if (totalImages != 1 && totalImages%3==0) {
        self.scrollView.contentSize = CGSizeMake(320, totalImages*60);
        x = 10;
        y = y+103;
    }
    else{
        x = x + 100;
    }
}
- (void)viewDidUnload {
    [self setSearchButton:nil];
    [super viewDidUnload];
}
-(void) moreImages{
    [self getGoogleImagesForQuery:lastSearchKey withPage:self.imageListArray.count];
    self.moreButon.frame = CGRectMake(10, y+110, 120, 30);
}
#pragma mark - 
#pragma mark Textfield Delegate
-(BOOL) textFieldShouldBeginEditing:(UITextField *)textField{
    return YES;
}
-(BOOL) textField:(UITextField *)textField shouldChangeCharactersInRange:(NSRange)range replacementString:(NSString *)string{
    
    return YES;
}
-(BOOL) textFieldShouldReturn:(UITextField *)textField{
    
    [self searchButtonClicked:nil];
    return YES;
}

@end
